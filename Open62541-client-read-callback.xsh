/* begin generated by script/client-server-read-write.pl */

static void
clientAsyncReadBooleanCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_Boolean *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_Boolean(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadByteCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_Byte *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_Byte(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

#ifdef HAVE_UA_CLIENTASYNCREADVALUEATTRIBUTECALLBACK_DATAVALUE

static void
clientAsyncReadDataValueCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_DataValue *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_DataValue(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

#endif

static void
clientAsyncReadDoubleCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_Double *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_Double(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadInt32Callback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_Int32 *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_Int32(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadLocalizedTextCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_LocalizedText *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_LocalizedText(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadNodeClassCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_NodeClass *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_NodeClass(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadQualifiedNameCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_QualifiedName *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_QualifiedName(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

static void
clientAsyncReadUInt32Callback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_UInt32 *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_UInt32(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

#ifdef HAVE_UA_CLIENTASYNCREADVALUEATTRIBUTECALLBACK_VARIANT

static void
clientAsyncReadVariantCallback(UA_Client *client, void *userdata,
    UA_UInt32 requestId,
#ifdef HAVE_UA_CLIENTASYNCOPERATIONCALLBACK
    UA_StatusCode status,
#endif
    UA_Variant *var)
{
	dTHX;
	SV *sv;

	sv = newSV(0);
	if (var != NULL)
		XS_pack_UA_Variant(sv, *var);

	/* XXX we do not propagate the status code */
	clientCallbackPerl(client, userdata, requestId, sv);
}

#endif

/* end generated by script/client-server-read-write.pl */
